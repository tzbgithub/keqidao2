<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.application.mapper.invite.InviteMapper">
  <resultMap id="BaseResultMap" type="com.qidao.application.entity.invite.Invite">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="invite_phone" jdbcType="VARCHAR" property="invitePhone" />
    <result column="invite_name" jdbcType="VARCHAR" property="inviteName" />
    <result column="invite_position" jdbcType="VARCHAR" property="invitePosition" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="bind_time" jdbcType="TIMESTAMP" property="bindTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, member_id, invite_phone, invite_name, invite_position, expire_time, bind_time, 
    status, create_time, update_time, create_by, update_by, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.qidao.application.entity.invite.InviteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invite
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from invite
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qidao.application.entity.invite.InviteExample">
    delete from invite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qidao.application.entity.invite.Invite">
    insert into invite (id, type, member_id, 
      invite_phone, invite_name, invite_position, 
      expire_time, bind_time, status, 
      create_time, update_time, create_by, 
      update_by, del_flag)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{memberId,jdbcType=BIGINT}, 
      #{invitePhone,jdbcType=VARCHAR}, #{inviteName,jdbcType=VARCHAR}, #{invitePosition,jdbcType=VARCHAR}, 
      #{expireTime,jdbcType=TIMESTAMP}, #{bindTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=BIGINT}, #{delFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into invite
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.type != null">
            type,
          </if>
          <if test="record.memberId != null">
            member_id,
          </if>
          <if test="record.invitePhone != null">
            invite_phone,
          </if>
          <if test="record.inviteName != null">
            invite_name,
          </if>
          <if test="record.invitePosition != null">
            invite_position,
          </if>
          <if test="record.expireTime != null">
            expire_time,
          </if>
          <if test="record.bindTime != null">
            bind_time,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.delFlag != null">
            del_flag,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.memberId != null">
            #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.invitePhone != null">
            #{record.invitePhone,jdbcType=VARCHAR},
          </if>
          <if test="record.inviteName != null">
            #{record.inviteName,jdbcType=VARCHAR},
          </if>
          <if test="record.invitePosition != null">
            #{record.invitePosition,jdbcType=VARCHAR},
          </if>
          <if test="record.expireTime != null">
            #{record.expireTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bindTime != null">
            #{record.bindTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qidao.application.entity.invite.InviteExample" resultType="java.lang.Long">
    select count(*) from invite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invite
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.invitePhone != null">
            invite_phone = #{record.invitePhone,jdbcType=VARCHAR},
          </if>
          <if test="record.inviteName != null">
            invite_name = #{record.inviteName,jdbcType=VARCHAR},
          </if>
          <if test="record.invitePosition != null">
            invite_position = #{record.invitePosition,jdbcType=VARCHAR},
          </if>
          <if test="record.expireTime != null">
            expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bindTime != null">
            bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invite
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=BIGINT},
      invite_phone = #{record.invitePhone,jdbcType=VARCHAR},
      invite_name = #{record.inviteName,jdbcType=VARCHAR},
      invite_position = #{record.invitePosition,jdbcType=VARCHAR},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update invite
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.invitePhone != null">
            invite_phone = #{record.invitePhone,jdbcType=VARCHAR},
          </if>
          <if test="record.inviteName != null">
            invite_name = #{record.inviteName,jdbcType=VARCHAR},
          </if>
          <if test="record.invitePosition != null">
            invite_position = #{record.invitePosition,jdbcType=VARCHAR},
          </if>
          <if test="record.expireTime != null">
            expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bindTime != null">
            bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qidao.application.entity.invite.Invite">
    update invite
    set type = #{type,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=BIGINT},
      invite_phone = #{invitePhone,jdbcType=VARCHAR},
      invite_name = #{inviteName,jdbcType=VARCHAR},
      invite_position = #{invitePosition,jdbcType=VARCHAR},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      bind_time = #{bindTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qidao.application.entity.invite.InviteExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from invite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into invite
    (id, type, member_id, invite_phone, invite_name, invite_position, expire_time, bind_time, 
      status, create_time, update_time, create_by, update_by, del_flag)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.type,jdbcType=INTEGER}, #{item.memberId,jdbcType=BIGINT}, 
        #{item.invitePhone,jdbcType=VARCHAR}, #{item.inviteName,jdbcType=VARCHAR}, #{item.invitePosition,jdbcType=VARCHAR}, 
        #{item.expireTime,jdbcType=TIMESTAMP}, #{item.bindTime,jdbcType=TIMESTAMP}, #{item.status,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=BIGINT}, 
        #{item.updateBy,jdbcType=BIGINT}, #{item.delFlag,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into invite (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'member_id'.toString() == column.value">
          #{item.memberId,jdbcType=BIGINT}
        </if>
        <if test="'invite_phone'.toString() == column.value">
          #{item.invitePhone,jdbcType=VARCHAR}
        </if>
        <if test="'invite_name'.toString() == column.value">
          #{item.inviteName,jdbcType=VARCHAR}
        </if>
        <if test="'invite_position'.toString() == column.value">
          #{item.invitePosition,jdbcType=VARCHAR}
        </if>
        <if test="'expire_time'.toString() == column.value">
          #{item.expireTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'bind_time'.toString() == column.value">
          #{item.bindTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>