<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.application.mapper.relation.LinkOrganizationSalesmanMapper">
  <resultMap id="BaseResultMap" type="com.qidao.application.entity.relation.LinkOrganizationSalesman">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="organization_id" jdbcType="BIGINT" property="organizationId" />
    <result column="salesman_id" jdbcType="BIGINT" property="salesmanId" />
    <result column="salesman_name" jdbcType="VARCHAR" property="salesmanName" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="organization_name" jdbcType="VARCHAR" property="organizationName" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="authoorized" jdbcType="INTEGER" property="authoorized" />
    <result column="authorized_img" jdbcType="VARCHAR" property="authorizedImg" />
    <result column="authorized_salesman" jdbcType="BIGINT" property="authorizedSalesman" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, organization_id, salesman_id, salesman_name, create_by, update_by, update_time, 
    create_time, type, del_flag, organization_name, member_id, member_name, authoorized, 
    authorized_img, authorized_salesman
  </sql>
  <select id="selectByExample" parameterType="com.qidao.application.entity.relation.LinkOrganizationSalesmanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from link_organization_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from link_organization_salesman
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from link_organization_salesman
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qidao.application.entity.relation.LinkOrganizationSalesmanExample">
    delete from link_organization_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qidao.application.entity.relation.LinkOrganizationSalesman">
    insert into link_organization_salesman (id, organization_id, salesman_id, 
      salesman_name, create_by, update_by, 
      update_time, create_time, type, 
      del_flag, organization_name, member_id, 
      member_name, authoorized, authorized_img, 
      authorized_salesman)
    values (#{id,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT}, #{salesmanId,jdbcType=BIGINT}, 
      #{salesmanName,jdbcType=VARCHAR}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=TINYINT}, #{organizationName,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT}, 
      #{memberName,jdbcType=VARCHAR}, #{authoorized,jdbcType=INTEGER}, #{authorizedImg,jdbcType=VARCHAR}, 
      #{authorizedSalesman,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into link_organization_salesman
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.organizationId != null">
            organization_id,
          </if>
          <if test="record.salesmanId != null">
            salesman_id,
          </if>
          <if test="record.salesmanName != null">
            salesman_name,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.type != null">
            type,
          </if>
          <if test="record.delFlag != null">
            del_flag,
          </if>
          <if test="record.organizationName != null">
            organization_name,
          </if>
          <if test="record.memberId != null">
            member_id,
          </if>
          <if test="record.memberName != null">
            member_name,
          </if>
          <if test="record.authoorized != null">
            authoorized,
          </if>
          <if test="record.authorizedImg != null">
            authorized_img,
          </if>
          <if test="record.authorizedSalesman != null">
            authorized_salesman,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.organizationId != null">
            #{record.organizationId,jdbcType=BIGINT},
          </if>
          <if test="record.salesmanId != null">
            #{record.salesmanId,jdbcType=BIGINT},
          </if>
          <if test="record.salesmanName != null">
            #{record.salesmanName,jdbcType=VARCHAR},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.organizationName != null">
            #{record.organizationName,jdbcType=VARCHAR},
          </if>
          <if test="record.memberId != null">
            #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.memberName != null">
            #{record.memberName,jdbcType=VARCHAR},
          </if>
          <if test="record.authoorized != null">
            #{record.authoorized,jdbcType=INTEGER},
          </if>
          <if test="record.authorizedImg != null">
            #{record.authorizedImg,jdbcType=VARCHAR},
          </if>
          <if test="record.authorizedSalesman != null">
            #{record.authorizedSalesman,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qidao.application.entity.relation.LinkOrganizationSalesmanExample" resultType="java.lang.Long">
    select count(*) from link_organization_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update link_organization_salesman
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.organizationId != null">
            organization_id = #{record.organizationId,jdbcType=BIGINT},
          </if>
          <if test="record.salesmanId != null">
            salesman_id = #{record.salesmanId,jdbcType=BIGINT},
          </if>
          <if test="record.salesmanName != null">
            salesman_name = #{record.salesmanName,jdbcType=VARCHAR},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.organizationName != null">
            organization_name = #{record.organizationName,jdbcType=VARCHAR},
          </if>
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.memberName != null">
            member_name = #{record.memberName,jdbcType=VARCHAR},
          </if>
          <if test="record.authoorized != null">
            authoorized = #{record.authoorized,jdbcType=INTEGER},
          </if>
          <if test="record.authorizedImg != null">
            authorized_img = #{record.authorizedImg,jdbcType=VARCHAR},
          </if>
          <if test="record.authorizedSalesman != null">
            authorized_salesman = #{record.authorizedSalesman,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update link_organization_salesman
    set id = #{record.id,jdbcType=BIGINT},
      organization_id = #{record.organizationId,jdbcType=BIGINT},
      salesman_id = #{record.salesmanId,jdbcType=BIGINT},
      salesman_name = #{record.salesmanName,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      organization_name = #{record.organizationName,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=BIGINT},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      authoorized = #{record.authoorized,jdbcType=INTEGER},
      authorized_img = #{record.authorizedImg,jdbcType=VARCHAR},
      authorized_salesman = #{record.authorizedSalesman,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update link_organization_salesman
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.organizationId != null">
            organization_id = #{record.organizationId,jdbcType=BIGINT},
          </if>
          <if test="record.salesmanId != null">
            salesman_id = #{record.salesmanId,jdbcType=BIGINT},
          </if>
          <if test="record.salesmanName != null">
            salesman_name = #{record.salesmanName,jdbcType=VARCHAR},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.organizationName != null">
            organization_name = #{record.organizationName,jdbcType=VARCHAR},
          </if>
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.memberName != null">
            member_name = #{record.memberName,jdbcType=VARCHAR},
          </if>
          <if test="record.authoorized != null">
            authoorized = #{record.authoorized,jdbcType=INTEGER},
          </if>
          <if test="record.authorizedImg != null">
            authorized_img = #{record.authorizedImg,jdbcType=VARCHAR},
          </if>
          <if test="record.authorizedSalesman != null">
            authorized_salesman = #{record.authorizedSalesman,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qidao.application.entity.relation.LinkOrganizationSalesman">
    update link_organization_salesman
    set organization_id = #{organizationId,jdbcType=BIGINT},
      salesman_id = #{salesmanId,jdbcType=BIGINT},
      salesman_name = #{salesmanName,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT},
      organization_name = #{organizationName,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=BIGINT},
      member_name = #{memberName,jdbcType=VARCHAR},
      authoorized = #{authoorized,jdbcType=INTEGER},
      authorized_img = #{authorizedImg,jdbcType=VARCHAR},
      authorized_salesman = #{authorizedSalesman,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qidao.application.entity.relation.LinkOrganizationSalesmanExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from link_organization_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into link_organization_salesman
    (id, organization_id, salesman_id, salesman_name, create_by, update_by, update_time, 
      create_time, type, del_flag, organization_name, member_id, member_name, authoorized, 
      authorized_img, authorized_salesman)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.organizationId,jdbcType=BIGINT}, #{item.salesmanId,jdbcType=BIGINT}, 
        #{item.salesmanName,jdbcType=VARCHAR}, #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.type,jdbcType=INTEGER}, 
        #{item.delFlag,jdbcType=TINYINT}, #{item.organizationName,jdbcType=VARCHAR}, #{item.memberId,jdbcType=BIGINT}, 
        #{item.memberName,jdbcType=VARCHAR}, #{item.authoorized,jdbcType=INTEGER}, #{item.authorizedImg,jdbcType=VARCHAR}, 
        #{item.authorizedSalesman,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into link_organization_salesman (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'organization_id'.toString() == column.value">
          #{item.organizationId,jdbcType=BIGINT}
        </if>
        <if test="'salesman_id'.toString() == column.value">
          #{item.salesmanId,jdbcType=BIGINT}
        </if>
        <if test="'salesman_name'.toString() == column.value">
          #{item.salesmanName,jdbcType=VARCHAR}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
        <if test="'organization_name'.toString() == column.value">
          #{item.organizationName,jdbcType=VARCHAR}
        </if>
        <if test="'member_id'.toString() == column.value">
          #{item.memberId,jdbcType=BIGINT}
        </if>
        <if test="'member_name'.toString() == column.value">
          #{item.memberName,jdbcType=VARCHAR}
        </if>
        <if test="'authoorized'.toString() == column.value">
          #{item.authoorized,jdbcType=INTEGER}
        </if>
        <if test="'authorized_img'.toString() == column.value">
          #{item.authorizedImg,jdbcType=VARCHAR}
        </if>
        <if test="'authorized_salesman'.toString() == column.value">
          #{item.authorizedSalesman,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>