<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.application.mapper.server.ServerMapper">
  <resultMap id="BaseResultMap" type="com.qidao.application.entity.server.Server">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="organized_id_party_a" jdbcType="BIGINT" property="organizedIdPartyA" />
    <result column="organized_id_party_b" jdbcType="BIGINT" property="organizedIdPartyB" />
    <result column="member_id_party_a" jdbcType="BIGINT" property="memberIdPartyA" />
    <result column="member_id_party_b" jdbcType="BIGINT" property="memberIdPartyB" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="address_province_id" jdbcType="INTEGER" property="addressProvinceId" />
    <result column="address_province_name" jdbcType="VARCHAR" property="addressProvinceName" />
    <result column="address_city_id" jdbcType="INTEGER" property="addressCityId" />
    <result column="address_city_name" jdbcType="VARCHAR" property="addressCityName" />
    <result column="address_area_id" jdbcType="INTEGER" property="addressAreaId" />
    <result column="address_area_name" jdbcType="VARCHAR" property="addressAreaName" />
    <result column="spec_area_id" jdbcType="BIGINT" property="specAreaId" />
    <result column="spec_amount_id" jdbcType="BIGINT" property="specAmountId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="thumb" jdbcType="VARCHAR" property="thumb" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="solution_time" jdbcType="TIMESTAMP" property="solutionTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="industry_id" jdbcType="BIGINT" property="industryId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_by, update_by, del_flag, organized_id_party_a, 
    organized_id_party_b, member_id_party_a, member_id_party_b, status, title, address_province_id, 
    address_province_name, address_city_id, address_city_name, address_area_id, address_area_name, 
    spec_area_id, spec_amount_id, description, thumb, url, solution_time, type, industry_id
  </sql>
  <select id="selectByExample" parameterType="com.qidao.application.entity.server.ServerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from server
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from server
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qidao.application.entity.server.ServerExample">
    delete from server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qidao.application.entity.server.Server">
    insert into server (id, create_time, update_time, 
      create_by, update_by, del_flag, 
      organized_id_party_a, organized_id_party_b, member_id_party_a, 
      member_id_party_b, status, title, 
      address_province_id, address_province_name, 
      address_city_id, address_city_name, address_area_id, 
      address_area_name, spec_area_id, spec_amount_id, 
      description, thumb, url, 
      solution_time, type, industry_id
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, #{delFlag,jdbcType=TINYINT}, 
      #{organizedIdPartyA,jdbcType=BIGINT}, #{organizedIdPartyB,jdbcType=BIGINT}, #{memberIdPartyA,jdbcType=BIGINT}, 
      #{memberIdPartyB,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{addressProvinceId,jdbcType=INTEGER}, #{addressProvinceName,jdbcType=VARCHAR}, 
      #{addressCityId,jdbcType=INTEGER}, #{addressCityName,jdbcType=VARCHAR}, #{addressAreaId,jdbcType=INTEGER}, 
      #{addressAreaName,jdbcType=VARCHAR}, #{specAreaId,jdbcType=BIGINT}, #{specAmountId,jdbcType=BIGINT}, 
      #{description,jdbcType=VARCHAR}, #{thumb,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{solutionTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{industryId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into server
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.delFlag != null">
            del_flag,
          </if>
          <if test="record.organizedIdPartyA != null">
            organized_id_party_a,
          </if>
          <if test="record.organizedIdPartyB != null">
            organized_id_party_b,
          </if>
          <if test="record.memberIdPartyA != null">
            member_id_party_a,
          </if>
          <if test="record.memberIdPartyB != null">
            member_id_party_b,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.title != null">
            title,
          </if>
          <if test="record.addressProvinceId != null">
            address_province_id,
          </if>
          <if test="record.addressProvinceName != null">
            address_province_name,
          </if>
          <if test="record.addressCityId != null">
            address_city_id,
          </if>
          <if test="record.addressCityName != null">
            address_city_name,
          </if>
          <if test="record.addressAreaId != null">
            address_area_id,
          </if>
          <if test="record.addressAreaName != null">
            address_area_name,
          </if>
          <if test="record.specAreaId != null">
            spec_area_id,
          </if>
          <if test="record.specAmountId != null">
            spec_amount_id,
          </if>
          <if test="record.description != null">
            description,
          </if>
          <if test="record.thumb != null">
            thumb,
          </if>
          <if test="record.url != null">
            url,
          </if>
          <if test="record.solutionTime != null">
            solution_time,
          </if>
          <if test="record.type != null">
            type,
          </if>
          <if test="record.industryId != null">
            industry_id,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.organizedIdPartyA != null">
            #{record.organizedIdPartyA,jdbcType=BIGINT},
          </if>
          <if test="record.organizedIdPartyB != null">
            #{record.organizedIdPartyB,jdbcType=BIGINT},
          </if>
          <if test="record.memberIdPartyA != null">
            #{record.memberIdPartyA,jdbcType=BIGINT},
          </if>
          <if test="record.memberIdPartyB != null">
            #{record.memberIdPartyB,jdbcType=BIGINT},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.addressProvinceId != null">
            #{record.addressProvinceId,jdbcType=INTEGER},
          </if>
          <if test="record.addressProvinceName != null">
            #{record.addressProvinceName,jdbcType=VARCHAR},
          </if>
          <if test="record.addressCityId != null">
            #{record.addressCityId,jdbcType=INTEGER},
          </if>
          <if test="record.addressCityName != null">
            #{record.addressCityName,jdbcType=VARCHAR},
          </if>
          <if test="record.addressAreaId != null">
            #{record.addressAreaId,jdbcType=INTEGER},
          </if>
          <if test="record.addressAreaName != null">
            #{record.addressAreaName,jdbcType=VARCHAR},
          </if>
          <if test="record.specAreaId != null">
            #{record.specAreaId,jdbcType=BIGINT},
          </if>
          <if test="record.specAmountId != null">
            #{record.specAmountId,jdbcType=BIGINT},
          </if>
          <if test="record.description != null">
            #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.thumb != null">
            #{record.thumb,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.solutionTime != null">
            #{record.solutionTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.industryId != null">
            #{record.industryId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qidao.application.entity.server.ServerExample" resultType="java.lang.Long">
    select count(*) from server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update server
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.organizedIdPartyA != null">
            organized_id_party_a = #{record.organizedIdPartyA,jdbcType=BIGINT},
          </if>
          <if test="record.organizedIdPartyB != null">
            organized_id_party_b = #{record.organizedIdPartyB,jdbcType=BIGINT},
          </if>
          <if test="record.memberIdPartyA != null">
            member_id_party_a = #{record.memberIdPartyA,jdbcType=BIGINT},
          </if>
          <if test="record.memberIdPartyB != null">
            member_id_party_b = #{record.memberIdPartyB,jdbcType=BIGINT},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            title = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.addressProvinceId != null">
            address_province_id = #{record.addressProvinceId,jdbcType=INTEGER},
          </if>
          <if test="record.addressProvinceName != null">
            address_province_name = #{record.addressProvinceName,jdbcType=VARCHAR},
          </if>
          <if test="record.addressCityId != null">
            address_city_id = #{record.addressCityId,jdbcType=INTEGER},
          </if>
          <if test="record.addressCityName != null">
            address_city_name = #{record.addressCityName,jdbcType=VARCHAR},
          </if>
          <if test="record.addressAreaId != null">
            address_area_id = #{record.addressAreaId,jdbcType=INTEGER},
          </if>
          <if test="record.addressAreaName != null">
            address_area_name = #{record.addressAreaName,jdbcType=VARCHAR},
          </if>
          <if test="record.specAreaId != null">
            spec_area_id = #{record.specAreaId,jdbcType=BIGINT},
          </if>
          <if test="record.specAmountId != null">
            spec_amount_id = #{record.specAmountId,jdbcType=BIGINT},
          </if>
          <if test="record.description != null">
            description = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.thumb != null">
            thumb = #{record.thumb,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.solutionTime != null">
            solution_time = #{record.solutionTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.industryId != null">
            industry_id = #{record.industryId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update server
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      organized_id_party_a = #{record.organizedIdPartyA,jdbcType=BIGINT},
      organized_id_party_b = #{record.organizedIdPartyB,jdbcType=BIGINT},
      member_id_party_a = #{record.memberIdPartyA,jdbcType=BIGINT},
      member_id_party_b = #{record.memberIdPartyB,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      address_province_id = #{record.addressProvinceId,jdbcType=INTEGER},
      address_province_name = #{record.addressProvinceName,jdbcType=VARCHAR},
      address_city_id = #{record.addressCityId,jdbcType=INTEGER},
      address_city_name = #{record.addressCityName,jdbcType=VARCHAR},
      address_area_id = #{record.addressAreaId,jdbcType=INTEGER},
      address_area_name = #{record.addressAreaName,jdbcType=VARCHAR},
      spec_area_id = #{record.specAreaId,jdbcType=BIGINT},
      spec_amount_id = #{record.specAmountId,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      thumb = #{record.thumb,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      solution_time = #{record.solutionTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      industry_id = #{record.industryId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update server
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.organizedIdPartyA != null">
            organized_id_party_a = #{record.organizedIdPartyA,jdbcType=BIGINT},
          </if>
          <if test="record.organizedIdPartyB != null">
            organized_id_party_b = #{record.organizedIdPartyB,jdbcType=BIGINT},
          </if>
          <if test="record.memberIdPartyA != null">
            member_id_party_a = #{record.memberIdPartyA,jdbcType=BIGINT},
          </if>
          <if test="record.memberIdPartyB != null">
            member_id_party_b = #{record.memberIdPartyB,jdbcType=BIGINT},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            title = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.addressProvinceId != null">
            address_province_id = #{record.addressProvinceId,jdbcType=INTEGER},
          </if>
          <if test="record.addressProvinceName != null">
            address_province_name = #{record.addressProvinceName,jdbcType=VARCHAR},
          </if>
          <if test="record.addressCityId != null">
            address_city_id = #{record.addressCityId,jdbcType=INTEGER},
          </if>
          <if test="record.addressCityName != null">
            address_city_name = #{record.addressCityName,jdbcType=VARCHAR},
          </if>
          <if test="record.addressAreaId != null">
            address_area_id = #{record.addressAreaId,jdbcType=INTEGER},
          </if>
          <if test="record.addressAreaName != null">
            address_area_name = #{record.addressAreaName,jdbcType=VARCHAR},
          </if>
          <if test="record.specAreaId != null">
            spec_area_id = #{record.specAreaId,jdbcType=BIGINT},
          </if>
          <if test="record.specAmountId != null">
            spec_amount_id = #{record.specAmountId,jdbcType=BIGINT},
          </if>
          <if test="record.description != null">
            description = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.thumb != null">
            thumb = #{record.thumb,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.solutionTime != null">
            solution_time = #{record.solutionTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.industryId != null">
            industry_id = #{record.industryId,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qidao.application.entity.server.Server">
    update server
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      organized_id_party_a = #{organizedIdPartyA,jdbcType=BIGINT},
      organized_id_party_b = #{organizedIdPartyB,jdbcType=BIGINT},
      member_id_party_a = #{memberIdPartyA,jdbcType=BIGINT},
      member_id_party_b = #{memberIdPartyB,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      address_province_id = #{addressProvinceId,jdbcType=INTEGER},
      address_province_name = #{addressProvinceName,jdbcType=VARCHAR},
      address_city_id = #{addressCityId,jdbcType=INTEGER},
      address_city_name = #{addressCityName,jdbcType=VARCHAR},
      address_area_id = #{addressAreaId,jdbcType=INTEGER},
      address_area_name = #{addressAreaName,jdbcType=VARCHAR},
      spec_area_id = #{specAreaId,jdbcType=BIGINT},
      spec_amount_id = #{specAmountId,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      thumb = #{thumb,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      solution_time = #{solutionTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      industry_id = #{industryId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qidao.application.entity.server.ServerExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into server
    (id, create_time, update_time, create_by, update_by, del_flag, organized_id_party_a, 
      organized_id_party_b, member_id_party_a, member_id_party_b, status, title, address_province_id, 
      address_province_name, address_city_id, address_city_name, address_area_id, address_area_name, 
      spec_area_id, spec_amount_id, description, thumb, url, solution_time, type, industry_id
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT}, #{item.delFlag,jdbcType=TINYINT}, 
        #{item.organizedIdPartyA,jdbcType=BIGINT}, #{item.organizedIdPartyB,jdbcType=BIGINT}, 
        #{item.memberIdPartyA,jdbcType=BIGINT}, #{item.memberIdPartyB,jdbcType=BIGINT}, 
        #{item.status,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR}, #{item.addressProvinceId,jdbcType=INTEGER}, 
        #{item.addressProvinceName,jdbcType=VARCHAR}, #{item.addressCityId,jdbcType=INTEGER}, 
        #{item.addressCityName,jdbcType=VARCHAR}, #{item.addressAreaId,jdbcType=INTEGER}, 
        #{item.addressAreaName,jdbcType=VARCHAR}, #{item.specAreaId,jdbcType=BIGINT}, #{item.specAmountId,jdbcType=BIGINT}, 
        #{item.description,jdbcType=VARCHAR}, #{item.thumb,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR}, 
        #{item.solutionTime,jdbcType=TIMESTAMP}, #{item.type,jdbcType=INTEGER}, #{item.industryId,jdbcType=BIGINT}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into server (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
        <if test="'organized_id_party_a'.toString() == column.value">
          #{item.organizedIdPartyA,jdbcType=BIGINT}
        </if>
        <if test="'organized_id_party_b'.toString() == column.value">
          #{item.organizedIdPartyB,jdbcType=BIGINT}
        </if>
        <if test="'member_id_party_a'.toString() == column.value">
          #{item.memberIdPartyA,jdbcType=BIGINT}
        </if>
        <if test="'member_id_party_b'.toString() == column.value">
          #{item.memberIdPartyB,jdbcType=BIGINT}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'title'.toString() == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'address_province_id'.toString() == column.value">
          #{item.addressProvinceId,jdbcType=INTEGER}
        </if>
        <if test="'address_province_name'.toString() == column.value">
          #{item.addressProvinceName,jdbcType=VARCHAR}
        </if>
        <if test="'address_city_id'.toString() == column.value">
          #{item.addressCityId,jdbcType=INTEGER}
        </if>
        <if test="'address_city_name'.toString() == column.value">
          #{item.addressCityName,jdbcType=VARCHAR}
        </if>
        <if test="'address_area_id'.toString() == column.value">
          #{item.addressAreaId,jdbcType=INTEGER}
        </if>
        <if test="'address_area_name'.toString() == column.value">
          #{item.addressAreaName,jdbcType=VARCHAR}
        </if>
        <if test="'spec_area_id'.toString() == column.value">
          #{item.specAreaId,jdbcType=BIGINT}
        </if>
        <if test="'spec_amount_id'.toString() == column.value">
          #{item.specAmountId,jdbcType=BIGINT}
        </if>
        <if test="'description'.toString() == column.value">
          #{item.description,jdbcType=VARCHAR}
        </if>
        <if test="'thumb'.toString() == column.value">
          #{item.thumb,jdbcType=VARCHAR}
        </if>
        <if test="'url'.toString() == column.value">
          #{item.url,jdbcType=VARCHAR}
        </if>
        <if test="'solution_time'.toString() == column.value">
          #{item.solutionTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'industry_id'.toString() == column.value">
          #{item.industryId,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>