<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.application.mapper.contract.ProgressMapper">
  <resultMap id="BaseResultMap" type="com.qidao.application.entity.contract.Progress">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="contract_id" jdbcType="BIGINT" property="contractId" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="step" jdbcType="VARCHAR" property="step" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="done_time" jdbcType="TIMESTAMP" property="doneTime" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_by, update_by, del_flag, contract_id, begin_time, 
    end_time, sequence, title, status, step, description, confirm_time, done_time, check_time
  </sql>
  <select id="selectByExample" parameterType="com.qidao.application.entity.contract.ProgressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from progress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from progress
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from progress
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qidao.application.entity.contract.ProgressExample">
    delete from progress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qidao.application.entity.contract.Progress">
    insert into progress (id, create_time, update_time, 
      create_by, update_by, del_flag, 
      contract_id, begin_time, end_time, 
      sequence, title, status, 
      step, description, confirm_time, 
      done_time, check_time)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, #{delFlag,jdbcType=TINYINT}, 
      #{contractId,jdbcType=BIGINT}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{sequence,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{step,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{confirmTime,jdbcType=TIMESTAMP}, 
      #{doneTime,jdbcType=TIMESTAMP}, #{checkTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into progress
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.delFlag != null">
            del_flag,
          </if>
          <if test="record.contractId != null">
            contract_id,
          </if>
          <if test="record.beginTime != null">
            begin_time,
          </if>
          <if test="record.endTime != null">
            end_time,
          </if>
          <if test="record.sequence != null">
            sequence,
          </if>
          <if test="record.title != null">
            title,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.step != null">
            step,
          </if>
          <if test="record.description != null">
            description,
          </if>
          <if test="record.confirmTime != null">
            confirm_time,
          </if>
          <if test="record.doneTime != null">
            done_time,
          </if>
          <if test="record.checkTime != null">
            check_time,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.contractId != null">
            #{record.contractId,jdbcType=BIGINT},
          </if>
          <if test="record.beginTime != null">
            #{record.beginTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.endTime != null">
            #{record.endTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.sequence != null">
            #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.step != null">
            #{record.step,jdbcType=VARCHAR},
          </if>
          <if test="record.description != null">
            #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.confirmTime != null">
            #{record.confirmTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.doneTime != null">
            #{record.doneTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.checkTime != null">
            #{record.checkTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qidao.application.entity.contract.ProgressExample" resultType="java.lang.Long">
    select count(*) from progress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update progress
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.contractId != null">
            contract_id = #{record.contractId,jdbcType=BIGINT},
          </if>
          <if test="record.beginTime != null">
            begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.endTime != null">
            end_time = #{record.endTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.sequence != null">
            sequence = #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            title = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.step != null">
            step = #{record.step,jdbcType=VARCHAR},
          </if>
          <if test="record.description != null">
            description = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.confirmTime != null">
            confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.doneTime != null">
            done_time = #{record.doneTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.checkTime != null">
            check_time = #{record.checkTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update progress
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      contract_id = #{record.contractId,jdbcType=BIGINT},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      sequence = #{record.sequence,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      step = #{record.step,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      done_time = #{record.doneTime,jdbcType=TIMESTAMP},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update progress
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.contractId != null">
            contract_id = #{record.contractId,jdbcType=BIGINT},
          </if>
          <if test="record.beginTime != null">
            begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.endTime != null">
            end_time = #{record.endTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.sequence != null">
            sequence = #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            title = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.step != null">
            step = #{record.step,jdbcType=VARCHAR},
          </if>
          <if test="record.description != null">
            description = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.confirmTime != null">
            confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.doneTime != null">
            done_time = #{record.doneTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.checkTime != null">
            check_time = #{record.checkTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qidao.application.entity.contract.Progress">
    update progress
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      contract_id = #{contractId,jdbcType=BIGINT},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      sequence = #{sequence,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      step = #{step,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      done_time = #{doneTime,jdbcType=TIMESTAMP},
      check_time = #{checkTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qidao.application.entity.contract.ProgressExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from progress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into progress
    (id, create_time, update_time, create_by, update_by, del_flag, contract_id, begin_time, 
      end_time, sequence, title, status, step, description, confirm_time, done_time, 
      check_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT}, #{item.delFlag,jdbcType=TINYINT}, 
        #{item.contractId,jdbcType=BIGINT}, #{item.beginTime,jdbcType=TIMESTAMP}, #{item.endTime,jdbcType=TIMESTAMP}, 
        #{item.sequence,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, 
        #{item.step,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.confirmTime,jdbcType=TIMESTAMP}, 
        #{item.doneTime,jdbcType=TIMESTAMP}, #{item.checkTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into progress (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
        <if test="'contract_id'.toString() == column.value">
          #{item.contractId,jdbcType=BIGINT}
        </if>
        <if test="'begin_time'.toString() == column.value">
          #{item.beginTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'end_time'.toString() == column.value">
          #{item.endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'sequence'.toString() == column.value">
          #{item.sequence,jdbcType=INTEGER}
        </if>
        <if test="'title'.toString() == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'step'.toString() == column.value">
          #{item.step,jdbcType=VARCHAR}
        </if>
        <if test="'description'.toString() == column.value">
          #{item.description,jdbcType=VARCHAR}
        </if>
        <if test="'confirm_time'.toString() == column.value">
          #{item.confirmTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'done_time'.toString() == column.value">
          #{item.doneTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'check_time'.toString() == column.value">
          #{item.checkTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>