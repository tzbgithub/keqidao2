<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.application.mapper.msg.MsgMapper">
  <resultMap id="BaseResultMap" type="com.qidao.application.entity.msg.Msg">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="push_time" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="receive_type" jdbcType="INTEGER" property="receiveType" />
    <result column="max_num" jdbcType="INTEGER" property="maxNum" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    <result column="title_type" jdbcType="INTEGER" property="titleType" />
    <result column="path_pc" jdbcType="VARCHAR" property="pathPc" />
    <result column="path_app" jdbcType="VARCHAR" property="pathApp" />
    <result column="path_type_app" jdbcType="INTEGER" property="pathTypeApp" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qidao.application.entity.msg.Msg">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, menu_id, title, type, status, expire_time, push_time, sequence, create_time, 
    update_time, create_by, update_by, del_flag, receive_type, max_num, content_type, 
    title_type, path_pc, path_app, path_type_app
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qidao.application.entity.msg.MsgExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qidao.application.entity.msg.MsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from msg
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qidao.application.entity.msg.MsgExample">
    delete from msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qidao.application.entity.msg.Msg">
    insert into msg (id, menu_id, title, 
      type, status, expire_time, 
      push_time, sequence, create_time, 
      update_time, create_by, update_by, 
      del_flag, receive_type, max_num, 
      content_type, title_type, path_pc, 
      path_app, path_type_app, content
      )
    values (#{id,jdbcType=BIGINT}, #{menuId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{expireTime,jdbcType=TIMESTAMP}, 
      #{pushTime,jdbcType=TIMESTAMP}, #{sequence,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, 
      #{delFlag,jdbcType=TINYINT}, #{receiveType,jdbcType=INTEGER}, #{maxNum,jdbcType=INTEGER}, 
      #{contentType,jdbcType=INTEGER}, #{titleType,jdbcType=INTEGER}, #{pathPc,jdbcType=VARCHAR}, 
      #{pathApp,jdbcType=VARCHAR}, #{pathTypeApp,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into msg
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.menuId != null">
            menu_id,
          </if>
          <if test="record.title != null">
            title,
          </if>
          <if test="record.type != null">
            type,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.expireTime != null">
            expire_time,
          </if>
          <if test="record.pushTime != null">
            push_time,
          </if>
          <if test="record.sequence != null">
            sequence,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.delFlag != null">
            del_flag,
          </if>
          <if test="record.receiveType != null">
            receive_type,
          </if>
          <if test="record.maxNum != null">
            max_num,
          </if>
          <if test="record.contentType != null">
            content_type,
          </if>
          <if test="record.titleType != null">
            title_type,
          </if>
          <if test="record.pathPc != null">
            path_pc,
          </if>
          <if test="record.pathApp != null">
            path_app,
          </if>
          <if test="record.pathTypeApp != null">
            path_type_app,
          </if>
          <if test="record.content != null">
            content,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.menuId != null">
            #{record.menuId,jdbcType=BIGINT},
          </if>
          <if test="record.title != null">
            #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.expireTime != null">
            #{record.expireTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.pushTime != null">
            #{record.pushTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.sequence != null">
            #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.receiveType != null">
            #{record.receiveType,jdbcType=INTEGER},
          </if>
          <if test="record.maxNum != null">
            #{record.maxNum,jdbcType=INTEGER},
          </if>
          <if test="record.contentType != null">
            #{record.contentType,jdbcType=INTEGER},
          </if>
          <if test="record.titleType != null">
            #{record.titleType,jdbcType=INTEGER},
          </if>
          <if test="record.pathPc != null">
            #{record.pathPc,jdbcType=VARCHAR},
          </if>
          <if test="record.pathApp != null">
            #{record.pathApp,jdbcType=VARCHAR},
          </if>
          <if test="record.pathTypeApp != null">
            #{record.pathTypeApp,jdbcType=INTEGER},
          </if>
          <if test="record.content != null">
            #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qidao.application.entity.msg.MsgExample" resultType="java.lang.Long">
    select count(*) from msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update msg
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.menuId != null">
            menu_id = #{record.menuId,jdbcType=BIGINT},
          </if>
          <if test="record.title != null">
            title = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.expireTime != null">
            expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.pushTime != null">
            push_time = #{record.pushTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.sequence != null">
            sequence = #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.receiveType != null">
            receive_type = #{record.receiveType,jdbcType=INTEGER},
          </if>
          <if test="record.maxNum != null">
            max_num = #{record.maxNum,jdbcType=INTEGER},
          </if>
          <if test="record.contentType != null">
            content_type = #{record.contentType,jdbcType=INTEGER},
          </if>
          <if test="record.titleType != null">
            title_type = #{record.titleType,jdbcType=INTEGER},
          </if>
          <if test="record.pathPc != null">
            path_pc = #{record.pathPc,jdbcType=VARCHAR},
          </if>
          <if test="record.pathApp != null">
            path_app = #{record.pathApp,jdbcType=VARCHAR},
          </if>
          <if test="record.pathTypeApp != null">
            path_type_app = #{record.pathTypeApp,jdbcType=INTEGER},
          </if>
          <if test="record.content != null">
            content = #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update msg
    set id = #{record.id,jdbcType=BIGINT},
      menu_id = #{record.menuId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      sequence = #{record.sequence,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      receive_type = #{record.receiveType,jdbcType=INTEGER},
      max_num = #{record.maxNum,jdbcType=INTEGER},
      content_type = #{record.contentType,jdbcType=INTEGER},
      title_type = #{record.titleType,jdbcType=INTEGER},
      path_pc = #{record.pathPc,jdbcType=VARCHAR},
      path_app = #{record.pathApp,jdbcType=VARCHAR},
      path_type_app = #{record.pathTypeApp,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update msg
    set id = #{record.id,jdbcType=BIGINT},
      menu_id = #{record.menuId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      sequence = #{record.sequence,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      receive_type = #{record.receiveType,jdbcType=INTEGER},
      max_num = #{record.maxNum,jdbcType=INTEGER},
      content_type = #{record.contentType,jdbcType=INTEGER},
      title_type = #{record.titleType,jdbcType=INTEGER},
      path_pc = #{record.pathPc,jdbcType=VARCHAR},
      path_app = #{record.pathApp,jdbcType=VARCHAR},
      path_type_app = #{record.pathTypeApp,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update msg
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.menuId != null">
            menu_id = #{record.menuId,jdbcType=BIGINT},
          </if>
          <if test="record.title != null">
            title = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.expireTime != null">
            expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.pushTime != null">
            push_time = #{record.pushTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.sequence != null">
            sequence = #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.receiveType != null">
            receive_type = #{record.receiveType,jdbcType=INTEGER},
          </if>
          <if test="record.maxNum != null">
            max_num = #{record.maxNum,jdbcType=INTEGER},
          </if>
          <if test="record.contentType != null">
            content_type = #{record.contentType,jdbcType=INTEGER},
          </if>
          <if test="record.titleType != null">
            title_type = #{record.titleType,jdbcType=INTEGER},
          </if>
          <if test="record.pathPc != null">
            path_pc = #{record.pathPc,jdbcType=VARCHAR},
          </if>
          <if test="record.pathApp != null">
            path_app = #{record.pathApp,jdbcType=VARCHAR},
          </if>
          <if test="record.pathTypeApp != null">
            path_type_app = #{record.pathTypeApp,jdbcType=INTEGER},
          </if>
          <if test="record.content != null">
            content = #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qidao.application.entity.msg.Msg">
    update msg
    set menu_id = #{menuId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      sequence = #{sequence,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      receive_type = #{receiveType,jdbcType=INTEGER},
      max_num = #{maxNum,jdbcType=INTEGER},
      content_type = #{contentType,jdbcType=INTEGER},
      title_type = #{titleType,jdbcType=INTEGER},
      path_pc = #{pathPc,jdbcType=VARCHAR},
      path_app = #{pathApp,jdbcType=VARCHAR},
      path_type_app = #{pathTypeApp,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qidao.application.entity.msg.Msg">
    update msg
    set menu_id = #{menuId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      sequence = #{sequence,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      receive_type = #{receiveType,jdbcType=INTEGER},
      max_num = #{maxNum,jdbcType=INTEGER},
      content_type = #{contentType,jdbcType=INTEGER},
      title_type = #{titleType,jdbcType=INTEGER},
      path_pc = #{pathPc,jdbcType=VARCHAR},
      path_app = #{pathApp,jdbcType=VARCHAR},
      path_type_app = #{pathTypeApp,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qidao.application.entity.msg.MsgExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.qidao.application.entity.msg.MsgExample" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into msg
    (id, menu_id, title, type, status, expire_time, push_time, sequence, create_time, 
      update_time, create_by, update_by, del_flag, receive_type, max_num, content_type, 
      title_type, path_pc, path_app, path_type_app, content)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.menuId,jdbcType=BIGINT}, #{item.title,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER}, #{item.expireTime,jdbcType=TIMESTAMP}, 
        #{item.pushTime,jdbcType=TIMESTAMP}, #{item.sequence,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT}, 
        #{item.delFlag,jdbcType=TINYINT}, #{item.receiveType,jdbcType=INTEGER}, #{item.maxNum,jdbcType=INTEGER}, 
        #{item.contentType,jdbcType=INTEGER}, #{item.titleType,jdbcType=INTEGER}, #{item.pathPc,jdbcType=VARCHAR}, 
        #{item.pathApp,jdbcType=VARCHAR}, #{item.pathTypeApp,jdbcType=INTEGER}, #{item.content,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into msg (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'menu_id'.toString() == column.value">
          #{item.menuId,jdbcType=BIGINT}
        </if>
        <if test="'title'.toString() == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'expire_time'.toString() == column.value">
          #{item.expireTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'push_time'.toString() == column.value">
          #{item.pushTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'sequence'.toString() == column.value">
          #{item.sequence,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
        <if test="'receive_type'.toString() == column.value">
          #{item.receiveType,jdbcType=INTEGER}
        </if>
        <if test="'max_num'.toString() == column.value">
          #{item.maxNum,jdbcType=INTEGER}
        </if>
        <if test="'content_type'.toString() == column.value">
          #{item.contentType,jdbcType=INTEGER}
        </if>
        <if test="'title_type'.toString() == column.value">
          #{item.titleType,jdbcType=INTEGER}
        </if>
        <if test="'path_pc'.toString() == column.value">
          #{item.pathPc,jdbcType=VARCHAR}
        </if>
        <if test="'path_app'.toString() == column.value">
          #{item.pathApp,jdbcType=VARCHAR}
        </if>
        <if test="'path_type_app'.toString() == column.value">
          #{item.pathTypeApp,jdbcType=INTEGER}
        </if>
        <if test="'content'.toString() == column.value">
          #{item.content,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>