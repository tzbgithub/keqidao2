<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.application.mapper.product.ProductSkuMapper">
  <resultMap id="BaseResultMap" type="com.qidao.application.entity.product.ProductSku">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="imgs" jdbcType="VARCHAR" property="imgs" />
    <result column="sale_price" jdbcType="DECIMAL" property="salePrice" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="server_val" jdbcType="INTEGER" property="serverVal" />
    <result column="permission" jdbcType="INTEGER" property="permission" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="extra" jdbcType="VARCHAR" property="extra" />
    <result column="canal_permission" jdbcType="INTEGER" property="canalPermission" />
    <result column="product_type" jdbcType="INTEGER" property="productType" />
    <result column="third_product_id" jdbcType="VARCHAR" property="thirdProductId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_by, update_by, del_flag, name, summary, imgs, 
    sale_price, market_price, type, server_val, permission, stock, status, url, sequence, 
    extra, canal_permission, product_type, third_product_id
  </sql>
  <select id="selectByExample" parameterType="com.qidao.application.entity.product.ProductSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_sku
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product_sku
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qidao.application.entity.product.ProductSkuExample">
    delete from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qidao.application.entity.product.ProductSku">
    insert into product_sku (id, create_time, update_time, 
      create_by, update_by, del_flag, 
      name, summary, imgs, 
      sale_price, market_price, type, 
      server_val, permission, stock, 
      status, url, sequence, 
      extra, canal_permission, product_type, 
      third_product_id)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, #{delFlag,jdbcType=TINYINT}, 
      #{name,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{imgs,jdbcType=VARCHAR}, 
      #{salePrice,jdbcType=DECIMAL}, #{marketPrice,jdbcType=DECIMAL}, #{type,jdbcType=INTEGER}, 
      #{serverVal,jdbcType=INTEGER}, #{permission,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, 
      #{extra,jdbcType=VARCHAR}, #{canalPermission,jdbcType=INTEGER}, #{productType,jdbcType=INTEGER}, 
      #{thirdProductId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into product_sku
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.delFlag != null">
            del_flag,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.summary != null">
            summary,
          </if>
          <if test="record.imgs != null">
            imgs,
          </if>
          <if test="record.salePrice != null">
            sale_price,
          </if>
          <if test="record.marketPrice != null">
            market_price,
          </if>
          <if test="record.type != null">
            type,
          </if>
          <if test="record.serverVal != null">
            server_val,
          </if>
          <if test="record.permission != null">
            permission,
          </if>
          <if test="record.stock != null">
            stock,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.url != null">
            url,
          </if>
          <if test="record.sequence != null">
            sequence,
          </if>
          <if test="record.extra != null">
            extra,
          </if>
          <if test="record.canalPermission != null">
            canal_permission,
          </if>
          <if test="record.productType != null">
            product_type,
          </if>
          <if test="record.thirdProductId != null">
            third_product_id,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.summary != null">
            #{record.summary,jdbcType=VARCHAR},
          </if>
          <if test="record.imgs != null">
            #{record.imgs,jdbcType=VARCHAR},
          </if>
          <if test="record.salePrice != null">
            #{record.salePrice,jdbcType=DECIMAL},
          </if>
          <if test="record.marketPrice != null">
            #{record.marketPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.serverVal != null">
            #{record.serverVal,jdbcType=INTEGER},
          </if>
          <if test="record.permission != null">
            #{record.permission,jdbcType=INTEGER},
          </if>
          <if test="record.stock != null">
            #{record.stock,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.url != null">
            #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.sequence != null">
            #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.extra != null">
            #{record.extra,jdbcType=VARCHAR},
          </if>
          <if test="record.canalPermission != null">
            #{record.canalPermission,jdbcType=INTEGER},
          </if>
          <if test="record.productType != null">
            #{record.productType,jdbcType=INTEGER},
          </if>
          <if test="record.thirdProductId != null">
            #{record.thirdProductId,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.qidao.application.entity.product.ProductSkuExample" resultType="java.lang.Long">
    select count(*) from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_sku
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.summary != null">
            summary = #{record.summary,jdbcType=VARCHAR},
          </if>
          <if test="record.imgs != null">
            imgs = #{record.imgs,jdbcType=VARCHAR},
          </if>
          <if test="record.salePrice != null">
            sale_price = #{record.salePrice,jdbcType=DECIMAL},
          </if>
          <if test="record.marketPrice != null">
            market_price = #{record.marketPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.serverVal != null">
            server_val = #{record.serverVal,jdbcType=INTEGER},
          </if>
          <if test="record.permission != null">
            permission = #{record.permission,jdbcType=INTEGER},
          </if>
          <if test="record.stock != null">
            stock = #{record.stock,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.sequence != null">
            sequence = #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.extra != null">
            extra = #{record.extra,jdbcType=VARCHAR},
          </if>
          <if test="record.canalPermission != null">
            canal_permission = #{record.canalPermission,jdbcType=INTEGER},
          </if>
          <if test="record.productType != null">
            product_type = #{record.productType,jdbcType=INTEGER},
          </if>
          <if test="record.thirdProductId != null">
            third_product_id = #{record.thirdProductId,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_sku
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      imgs = #{record.imgs,jdbcType=VARCHAR},
      sale_price = #{record.salePrice,jdbcType=DECIMAL},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=INTEGER},
      server_val = #{record.serverVal,jdbcType=INTEGER},
      permission = #{record.permission,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=INTEGER},
      extra = #{record.extra,jdbcType=VARCHAR},
      canal_permission = #{record.canalPermission,jdbcType=INTEGER},
      product_type = #{record.productType,jdbcType=INTEGER},
      third_product_id = #{record.thirdProductId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update product_sku
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=TINYINT},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.summary != null">
            summary = #{record.summary,jdbcType=VARCHAR},
          </if>
          <if test="record.imgs != null">
            imgs = #{record.imgs,jdbcType=VARCHAR},
          </if>
          <if test="record.salePrice != null">
            sale_price = #{record.salePrice,jdbcType=DECIMAL},
          </if>
          <if test="record.marketPrice != null">
            market_price = #{record.marketPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.serverVal != null">
            server_val = #{record.serverVal,jdbcType=INTEGER},
          </if>
          <if test="record.permission != null">
            permission = #{record.permission,jdbcType=INTEGER},
          </if>
          <if test="record.stock != null">
            stock = #{record.stock,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.sequence != null">
            sequence = #{record.sequence,jdbcType=INTEGER},
          </if>
          <if test="record.extra != null">
            extra = #{record.extra,jdbcType=VARCHAR},
          </if>
          <if test="record.canalPermission != null">
            canal_permission = #{record.canalPermission,jdbcType=INTEGER},
          </if>
          <if test="record.productType != null">
            product_type = #{record.productType,jdbcType=INTEGER},
          </if>
          <if test="record.thirdProductId != null">
            third_product_id = #{record.thirdProductId,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qidao.application.entity.product.ProductSku">
    update product_sku
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      imgs = #{imgs,jdbcType=VARCHAR},
      sale_price = #{salePrice,jdbcType=DECIMAL},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      server_val = #{serverVal,jdbcType=INTEGER},
      permission = #{permission,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      extra = #{extra,jdbcType=VARCHAR},
      canal_permission = #{canalPermission,jdbcType=INTEGER},
      product_type = #{productType,jdbcType=INTEGER},
      third_product_id = #{thirdProductId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.qidao.application.entity.product.ProductSkuExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into product_sku
    (id, create_time, update_time, create_by, update_by, del_flag, name, summary, imgs, 
      sale_price, market_price, type, server_val, permission, stock, status, url, sequence, 
      extra, canal_permission, product_type, third_product_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT}, #{item.delFlag,jdbcType=TINYINT}, 
        #{item.name,jdbcType=VARCHAR}, #{item.summary,jdbcType=VARCHAR}, #{item.imgs,jdbcType=VARCHAR}, 
        #{item.salePrice,jdbcType=DECIMAL}, #{item.marketPrice,jdbcType=DECIMAL}, #{item.type,jdbcType=INTEGER}, 
        #{item.serverVal,jdbcType=INTEGER}, #{item.permission,jdbcType=INTEGER}, #{item.stock,jdbcType=INTEGER}, 
        #{item.status,jdbcType=INTEGER}, #{item.url,jdbcType=VARCHAR}, #{item.sequence,jdbcType=INTEGER}, 
        #{item.extra,jdbcType=VARCHAR}, #{item.canalPermission,jdbcType=INTEGER}, #{item.productType,jdbcType=INTEGER}, 
        #{item.thirdProductId,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into product_sku (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'summary'.toString() == column.value">
          #{item.summary,jdbcType=VARCHAR}
        </if>
        <if test="'imgs'.toString() == column.value">
          #{item.imgs,jdbcType=VARCHAR}
        </if>
        <if test="'sale_price'.toString() == column.value">
          #{item.salePrice,jdbcType=DECIMAL}
        </if>
        <if test="'market_price'.toString() == column.value">
          #{item.marketPrice,jdbcType=DECIMAL}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'server_val'.toString() == column.value">
          #{item.serverVal,jdbcType=INTEGER}
        </if>
        <if test="'permission'.toString() == column.value">
          #{item.permission,jdbcType=INTEGER}
        </if>
        <if test="'stock'.toString() == column.value">
          #{item.stock,jdbcType=INTEGER}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'url'.toString() == column.value">
          #{item.url,jdbcType=VARCHAR}
        </if>
        <if test="'sequence'.toString() == column.value">
          #{item.sequence,jdbcType=INTEGER}
        </if>
        <if test="'extra'.toString() == column.value">
          #{item.extra,jdbcType=VARCHAR}
        </if>
        <if test="'canal_permission'.toString() == column.value">
          #{item.canalPermission,jdbcType=INTEGER}
        </if>
        <if test="'product_type'.toString() == column.value">
          #{item.productType,jdbcType=INTEGER}
        </if>
        <if test="'third_product_id'.toString() == column.value">
          #{item.thirdProductId,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>